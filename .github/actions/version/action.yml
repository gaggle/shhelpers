name: "Version Config"
description: "Parse semantic version and assess release eligibility"

inputs:
  semver:
    description: "Semantic version string to parse (e.g., '1.2.3' or 'v1.2.3')"
    required: true
  default-branch:
    description: "Name of the default branch"
    default: ${{ github.event.repository.default_branch }}

outputs:
  semver:
    description: "Normalized semantic version"
    value: ${{ steps.entrypoint.outputs.semver }}
  major:
    description: "Major version number"
    value: ${{ steps.entrypoint.outputs.major }}
  minor:
    description: "Minor version number"
    value: ${{ steps.entrypoint.outputs.minor }}
  patch:
    description: "Patch version number"
    value: ${{ steps.entrypoint.outputs.patch }}
  tag:
    description: "Git tag for the version (prefixed with 'v')"
    value: ${{ steps.entrypoint.outputs.tag }}
  tag-exists:
    description: "Whether a Git tag already exists for the version"
    value: ${{ steps.entrypoint.outputs.tag-exists }}
  previous-tag:
    description: "Git tag of the previous release"
    value: ${{ steps.entrypoint.outputs.previous-tag }}
  is-default-branch:
    description: "Whether the current branch is the default branch"
    value: ${{ steps.entrypoint.outputs.is-default-branch }}
  is-releasable:
    description: "Whether the current state is eligible for release"
    value: ${{ steps.entrypoint.outputs.is-releasable }}

runs:
  using: "composite"
  steps:
    - name: Fetch Git tags
      run: git fetch --prune --unshallow --tags > /dev/null
      shell: bash
    - run: ${{ github.action_path }}/entrypoint
      id: entrypoint
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
        INPUT_DEFAULT_BRANCH: ${{ inputs.default-branch }}
        INPUT_SEMVER: ${{ inputs.semver }}
