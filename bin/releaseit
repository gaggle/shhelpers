#!/bin/bash
eval "$(pkgx --shellcode)"; env +yq
set -euo pipefail

INCREMENT=${1:-PATCH}

increment_version() {
  local version=$1
  local part=$(echo "$2" | tr '[:lower:]' '[:upper:]')
  IFS='.' read -ra VERSION_PARTS <<< "$version"
  case "$part" in
    MAJOR)
      VERSION_PARTS[0]=$((VERSION_PARTS[0]+1))
      VERSION_PARTS[1]=0
      VERSION_PARTS[2]=0
      ;;
    MINOR)
      VERSION_PARTS[1]=$((VERSION_PARTS[1]+1))
      VERSION_PARTS[2]=0
      ;;
    PATCH)
      VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
      ;;
    *)
      echo "Error: Invalid version increment part '$2'. Use MAJOR, MINOR, or PATCH." >&2
      exit 1
      ;;
  esac
  echo "${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
}

# Check if there are uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "Error: There are uncommitted changes. Please commit or stash them before creating a release."
    exit 1
fi

current_version=$(yq e '.env.VERSION' .pkgx.yml)
new_version=$(increment_version "$current_version" "$INCREMENT")

yq e -i ".env.VERSION = \"$new_version\"" .pkgx.yml
git add .pkgx.yml
git commit -m "Release v$new_version"
git tag -a "v$new_version" -m "Release v$new_version"
git push origin main "v$new_version"

echo "Released v$new_version"
